{{ $artistsData := site.Data.spotify.topArtists.items }}
{{ $tracksData := site.Data.spotify.topTracks.items }}


{{ range $artistsData }}
  {{ $matchingTracks := slice }}
  {{ $artistSpotifyId := .id }}

  {{ range $tracksData }}
    {{ $track := . }}
    {{ range $track.artists }}
      {{ if eq .id $artistSpotifyId }}
        {{ $matchingTracks = $matchingTracks | append $track }}
      {{ end }}
    {{ end }}
  {{ end }}
  {{ $numTracks := len $matchingTracks }}

  {{/*  $extContent is only used for summary, list page content  */}}
  {{ $extContent := "" }}
  {{ $introStr := "" }}
  {{ $introStr = printf "I played %s %d times on spotify this month.\n{{< cta-button button_type=\"%s\" button_label=\"%s\" button_href=\"%s\">}}\n\n" .name $numTracks "spotify" "Spotify Artist Page" .external_urls.spotify }}
  {{ $imgHref := (index .images 0).url }}
  {{ $genreLinks := "" }}
  {{ range $index, $element := .genres }}
    {{/*  yes, this is a janky way to do this */}}
    {{ if gt $index 0 }}
      {{ $genreLinks = add $genreLinks " | " }}
    {{ end }}
    {{ $genreLinks = printf "%s{{< pass >}}<a class=\"relative z-10\" href=\"%s%s\">%s</a>{{</ pass >}}" $genreLinks "/musical-genres/" ($element | urlize) $element }}
  {{ end }}
  {{ $extContent = printf "%s%s![%s](%s)\n### Genres\n\n%s <!--more-->" $extContent $introStr .name $imgHref $genreLinks }}

  {{ $content := dict "mediaType" "text/markdown" "value" $extContent }}
  {{ $params := dict 
    "hideAsideBar" true
    "musicalGenres" .genres 
    "musical-genres" .genres 
    "numfollowers" .followers.total
    "spotifyImages" .images
    "popularity" .popularity
    "spotifyUrl" .external_urls.spotify
    "numTracks" $numTracks
    "tracks" $matchingTracks
  }}
  {{ $page := dict
    "content" $content
    "title" .name
    "type" "spotify-artist"
    "params" $params
    "path" .name
  }}
  {{ $.AddPage $page }}

  {{/* Add page resource. */}}
  {{/*  {{ $item := . }}
  {{ with $item.images }}
  {{ with $url := index . 0 "url" }}
    {{ with resources.GetRemote $url }}
      {{ with .Err }}
        {{ errorf "Unable to get remote resource %s: %s" $url . }}
      {{ else }}
        {{ $content := dict "mediaType" .MediaType.Type "value" .Content }}
        {{ $params := dict "alt" $item.name }}
        {{ $resource := dict
          "content" $content
          "params" $params
          "path" (printf "%s/feature_cover.%s" $item.name .MediaType.SubType)
        }}
        {{ $.AddResource $resource }}
      {{ end }}
    {{ else }}
      {{ errorf "Unable to get remote resource %s" $url }}
    {{ end }}
  {{ end }}
  {{ end }}  */}}
{{ end }}